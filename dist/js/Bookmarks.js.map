{"version":3,"sources":["../../js/Bookmarks.js"],"names":["Bookmarks","props","state","loadData","nextProps","params","data","isProcessed","isViewed","orderby","sorting","console","log","myGlobals","bookmarksCollection","getAll","then","response","range","headers","bookmarks","body","setState","loaded","bookmarkElements","map","bookmark","id","updateList","bind","React","Component"],"mappings":";;;;;;;;;;IAAMA,S;;;AAEJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sHACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;wCAEmB;;AAElB,WAAKC,QAAL,CAAc,KAAKF,KAAnB;AACD;;;8CAEyBG,S,EAAW;;AAEnC,WAAKD,QAAL,CAAcC,SAAd;AACD;;;6BAEQH,K,EAAO;AAAA;;AAEd,UAAMI,SAASJ,MAAMK,IAArB;AACAD,aAAOE,WAAP,GAAqB,IAArB;AACAF,aAAOG,QAAP,GAAkB,KAAlB;AACAH,aAAOI,OAAP,GAAiBR,MAAMS,OAAvB;AACAC,cAAQC,GAAR,CAAY,UAAZ,EAAwBP,MAAxB;;AAEAQ,gBAAUC,mBAAV,CAA8BC,MAA9B,CAAqCV,MAArC,EACCW,IADD,CACM,UAACC,QAAD,EAAc;AAClB,YAAMC,QAAQD,SAASE,OAAT,GAAmB,eAAnB,CAAd;AACA,YAAMC,YAAYH,SAASI,IAAT,EAAlB;AACA,eAAKC,QAAL,CAAc,EAACJ,OAAOA,KAAR,EAAeE,WAAWA,SAA1B,EAAqCG,QAAQ,IAA7C,EAAd;AACD,OALD;AAMD;;;iCAEY;;AAEX,WAAKpB,QAAL,CAAc,KAAKF,KAAnB;AACD;;;6BAEQ;AAAA;;AAEP,UAAI,CAAC,KAAKC,KAAL,CAAWqB,MAAhB,EAAwB;;AAEtB,eAAQ;AAAA;AAAA;AAAA;AAAA,SAAR;AACD;;AAED;AACA,UAAIC,mBAAmB,KAAKtB,KAAL,CAAWkB,SAAX,CAAqBK,GAArB,CAAyB,UAACC,QAAD,EAAc;AAC5D,eAAO,oBAAC,QAAD,IAAU,KAAKA,SAASpB,IAAT,GAAgBqB,EAA/B,EAAmC,MAAMD,QAAzC,EAAmD,YAAY,OAAKE,UAAL,CAAgBC,IAAhB,QAA/D,GAAP;AACD,OAFsB,CAAvB;;AAIA,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE;AAAA;AAAA,YAAK,WAAU,OAAf;AAAA;AACc,eAAK3B,KAAL,CAAWgB;AADzB,SADF;AAIGM;AAJH,OADF;AAQD;;;;EA1DqBM,MAAMC,S;;AA2D7B","file":"Bookmarks.js","sourcesContent":["class Bookmarks extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n\n    this.loadData(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n\n    this.loadData(nextProps);\n  }\n\n  loadData(props) {\n\n    const params = props.data;\n    params.isProcessed = true;\n    params.isViewed = false;\n    params.orderby = props.sorting;\n    console.log('params: ', params);\n\n    myGlobals.bookmarksCollection.getAll(params)\n    .then((response) => {\n      const range = response.headers()['content-range'];\n      const bookmarks = response.body();\n      this.setState({range: range, bookmarks: bookmarks, loaded: true});\n    });\n  }\n\n  updateList() {\n\n    this.loadData(this.props);\n  }\n\n  render() {\n\n    if (!this.state.loaded) {\n\n      return (<span>Loading...</span>);\n    }\n\n    //let sortedBookmarks = this.state.bookmarks.sort((a, b) => a.data().calculatedPriority - b.data().calculatedPriority);\n    let bookmarkElements = this.state.bookmarks.map((bookmark) => {\n      return <Bookmark key={bookmark.data().id} data={bookmark} updateList={this.updateList.bind(this)} />;\n    });\n\n    return (\n      <div className=\"bookmarks\">\n        <div className=\"stats\">\n          Displaying {this.state.range}\n        </div>\n        {bookmarkElements}\n      </div>\n    );\n  }\n};\n"]}