{"version":3,"sources":["../../js/Bookmarks.js"],"names":["Bookmarks","props","state","loadData","nextProps","params","data","isProcessed","isViewed","orderby","sorting","console","log","myGlobals","bookmarksCollection","getAll","then","response","bookmarks","body","setState","loaded","bookmarkElements","map","bookmark","id","React","Component"],"mappings":";;;;;;;;;;IAAMA,S;;;AAEJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sHACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;wCAEmB;;AAElB,WAAKC,QAAL,CAAc,KAAKF,KAAnB;AACD;;;8CAEyBG,S,EAAW;;AAEnC,WAAKD,QAAL,CAAcC,SAAd;AACD;;;6BAEQH,K,EAAO;AAAA;;AAEd,UAAMI,SAASJ,MAAMK,IAArB;AACAD,aAAOE,WAAP,GAAqB,IAArB;AACAF,aAAOG,QAAP,GAAkB,KAAlB;AACAH,aAAOI,OAAP,GAAiBR,MAAMS,OAAvB;AACAC,cAAQC,GAAR,CAAY,UAAZ,EAAwBP,MAAxB;;AAEAQ,gBAAUC,mBAAV,CAA8BC,MAA9B,CAAqCV,MAArC,EACCW,IADD,CACM,UAACC,QAAD,EAAc;AAClB,YAAMC,YAAYD,SAASE,IAAT,EAAlB;AACA,eAAKC,QAAL,CAAc,EAACF,WAAWA,SAAZ,EAAuBG,QAAQ,IAA/B,EAAd;AACD,OAJD;AAKD;;;6BAEQ;;AAEP,UAAI,CAAC,KAAKnB,KAAL,CAAWmB,MAAhB,EAAwB;;AAEtB,eAAQ;AAAA;AAAA;AAAA;AAAA,SAAR;AACD;;AAEDV,cAAQC,GAAR,CAAY,QAAZ;;AAEA;AACA,UAAIU,mBAAmB,KAAKpB,KAAL,CAAWgB,SAAX,CAAqBK,GAArB,CAAyB,UAACC,QAAD,EAAc;AAC5D,eAAO,oBAAC,QAAD,IAAU,KAAKA,SAASlB,IAAT,GAAgBmB,EAA/B,EAAmC,MAAMD,QAAzC,GAAP;AACD,OAFsB,CAAvB;;AAIA,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACGF;AADH,OADF;AAKD;;;;EAnDqBI,MAAMC,S;;AAoD7B","file":"Bookmarks.js","sourcesContent":["class Bookmarks extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n\n    this.loadData(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n\n    this.loadData(nextProps);\n  }\n\n  loadData(props) {\n\n    const params = props.data;\n    params.isProcessed = true;\n    params.isViewed = false;\n    params.orderby = props.sorting;\n    console.log('params: ', params);\n\n    myGlobals.bookmarksCollection.getAll(params)\n    .then((response) => {\n      const bookmarks = response.body();\n      this.setState({bookmarks: bookmarks, loaded: true});\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded) {\n\n      return (<span>Loading...</span>);\n    }\n\n    console.log('render');\n\n    //let sortedBookmarks = this.state.bookmarks.sort((a, b) => a.data().calculatedPriority - b.data().calculatedPriority);\n    let bookmarkElements = this.state.bookmarks.map((bookmark) => {\n      return <Bookmark key={bookmark.data().id} data={bookmark} />;\n    });\n\n    return (\n      <div className=\"bookmarks\">\n        {bookmarkElements}\n      </div>\n    );\n  }\n};\n"]}